/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import java.awt.event.ActionListener;
import oovv.MiEX;
import oovv.Punto;

/**
 *
 * @author ÓSCAR SUÁREZ
 */
public class DEliminar extends javax.swing.JDialog {

    /**
     * Creates new form DAñadir
     */
    public DEliminar(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        eAcción = new javax.swing.JLabel();
        bElimina = new javax.swing.JButton();
        bCancela = new javax.swing.JButton();
        jpRango = new javax.swing.JPanel();
        eRango = new javax.swing.JLabel();
        tfRangoIni = new javax.swing.JTextField();
        eSeparador = new javax.swing.JLabel();
        tfRangoFin = new javax.swing.JTextField();
        rbPerimetro = new javax.swing.JRadioButton();
        rbArea = new javax.swing.JRadioButton();
        jpPosicion = new javax.swing.JPanel();
        eDatos1 = new javax.swing.JLabel();
        eDatos2 = new javax.swing.JLabel();
        tfDato1 = new javax.swing.JTextField();
        tfDato2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        eAcción.setFont(new java.awt.Font("Rockwell Condensed", 0, 24)); // NOI18N
        eAcción.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        eAcción.setText("acción");

        bElimina.setFont(new java.awt.Font("Rockwell Condensed", 1, 24)); // NOI18N
        bElimina.setText("valida");
        bElimina.setActionCommand("elimina");
        bElimina.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));

        bCancela.setFont(new java.awt.Font("Rockwell Condensed", 1, 24)); // NOI18N
        bCancela.setText("cancela");
        bCancela.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));

        eRango.setFont(new java.awt.Font("Rockwell Condensed", 0, 24)); // NOI18N
        eRango.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        eRango.setText("Rango");

        tfRangoIni.setColumns(5);
        tfRangoIni.setFont(new java.awt.Font("Rockwell Condensed", 0, 24)); // NOI18N
        tfRangoIni.setText("10");

        eSeparador.setFont(new java.awt.Font("Rockwell Condensed", 0, 24)); // NOI18N
        eSeparador.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        eSeparador.setText("-");

        tfRangoFin.setColumns(5);
        tfRangoFin.setFont(new java.awt.Font("Rockwell Condensed", 0, 24)); // NOI18N
        tfRangoFin.setText("10");

        rbPerimetro.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        rbPerimetro.setText("Perímetro");
        rbPerimetro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPerimetroActionPerformed(evt);
            }
        });

        rbArea.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        rbArea.setSelected(true);
        rbArea.setText("Área");

        eDatos1.setFont(new java.awt.Font("Rockwell Condensed", 0, 24)); // NOI18N
        eDatos1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        eDatos1.setText("X");

        eDatos2.setFont(new java.awt.Font("Rockwell Condensed", 0, 24)); // NOI18N
        eDatos2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        eDatos2.setText("Y");

        tfDato1.setColumns(5);
        tfDato1.setFont(new java.awt.Font("Rockwell Condensed", 0, 24)); // NOI18N
        tfDato1.setText("4");

        tfDato2.setColumns(5);
        tfDato2.setFont(new java.awt.Font("Rockwell Condensed", 0, 24)); // NOI18N
        tfDato2.setText("10");

        javax.swing.GroupLayout jpPosicionLayout = new javax.swing.GroupLayout(jpPosicion);
        jpPosicion.setLayout(jpPosicionLayout);
        jpPosicionLayout.setHorizontalGroup(
            jpPosicionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPosicionLayout.createSequentialGroup()
                .addGroup(jpPosicionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpPosicionLayout.createSequentialGroup()
                        .addComponent(eDatos1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tfDato1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpPosicionLayout.createSequentialGroup()
                        .addComponent(eDatos2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tfDato2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        jpPosicionLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {eDatos1, eDatos2});

        jpPosicionLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {tfDato1, tfDato2});

        jpPosicionLayout.setVerticalGroup(
            jpPosicionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPosicionLayout.createSequentialGroup()
                .addGroup(jpPosicionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eDatos1)
                    .addComponent(tfDato1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpPosicionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eDatos2)
                    .addComponent(tfDato2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jpRangoLayout = new javax.swing.GroupLayout(jpRango);
        jpRango.setLayout(jpRangoLayout);
        jpRangoLayout.setHorizontalGroup(
            jpRangoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpRangoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpRangoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpRangoLayout.createSequentialGroup()
                        .addComponent(eRango)
                        .addGap(18, 18, 18)
                        .addComponent(tfRangoIni, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eSeparador)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfRangoFin, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jpPosicion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpRangoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbArea)
                    .addComponent(rbPerimetro))
                .addContainerGap())
        );
        jpRangoLayout.setVerticalGroup(
            jpRangoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpRangoLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jpRangoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eRango)
                    .addComponent(tfRangoIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eSeparador)
                    .addComponent(tfRangoFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpPosicion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jpRangoLayout.createSequentialGroup()
                .addComponent(rbArea)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbPerimetro)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jpRangoLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {tfRangoFin, tfRangoIni});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jpRango, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(eAcción, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(bElimina, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bCancela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(eAcción)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpRango, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bElimina)
                    .addComponent(bCancela))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbPerimetroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPerimetroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbPerimetroActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DEliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DEliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DEliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DEliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DEliminar dialog = new DEliminar(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCancela;
    private javax.swing.JButton bElimina;
    private javax.swing.JLabel eAcción;
    private javax.swing.JLabel eDatos1;
    private javax.swing.JLabel eDatos2;
    private javax.swing.JLabel eRango;
    private javax.swing.JLabel eSeparador;
    private javax.swing.JPanel jpPosicion;
    private javax.swing.JPanel jpRango;
    private javax.swing.JRadioButton rbArea;
    private javax.swing.JRadioButton rbPerimetro;
    private javax.swing.JTextField tfDato1;
    private javax.swing.JTextField tfDato2;
    private javax.swing.JTextField tfRangoFin;
    private javax.swing.JTextField tfRangoIni;
    // End of variables declaration//GEN-END:variables

    public void setOyente(ActionListener oyente) {
        bCancela.addActionListener(oyente);
        bElimina.addActionListener(oyente);
    }

    public void setAccion(String accion) {
        eAcción.setText(accion);
        bElimina.setActionCommand(accion);
        if (accion == "eliminar una figura") {
            jpRango.setVisible(false);
        } else {
            jpPosicion.setVisible(false);
        }
    }

    public Punto getPosicion() {
        return new Punto(Integer.parseInt(tfDato1.getText()), Integer.parseInt(tfDato2.getText()));
    }

    public String getRangoIni() throws MiEX {
        if ((Double.parseDouble(tfRangoIni.getText()) < 0)) {
            throw new MiEX("No se admiten valores negativos.");
        }
        return tfRangoIni.getText();
    }

    public String getRangoFin() throws MiEX {
        if ((Double.parseDouble(tfRangoFin.getText()) < 0)) {
            throw new MiEX("No se admiten valores negativos.");
        }
        return tfRangoFin.getText();
    }

    public String tipoRango() {
        if (rbArea.isSelected()) {
            return "area";
        } else {
            return "perimetro";
        }
    }
}
